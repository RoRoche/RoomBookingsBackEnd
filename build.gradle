plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.15.0'
}

group 'fr.guddy.roombookings'
version '1.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin standard library
    implementation platform("org.jetbrains.kotlin:kotlin-bom:2.0.0")
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    // Nitrite (embedded NoSQL database)
    implementation 'org.dizitart:nitrite:3.2.0'

    // Javalin (web framework)
    implementation 'io.javalin:javalin:6.7.0'

    // SLF4J Simple (logging)
    implementation 'org.slf4j:slf4j-simple:1.7.36'

    // Vavr (functional library)
    implementation 'io.vavr:vavr:0.10.4'

    // Joda-Time (date/time API)
    implementation 'joda-time:joda-time:2.10.14'

    // JSON processing
    implementation 'javax.json:javax.json-api:1.1.4'
    implementation 'org.glassfish:javax.json:1.1.4'

    // Cactoos
    implementation("org.cactoos:cactoos:0.57.0")

    // Tests
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'com.mashape.unirest:unirest-java:1.4.9'
    testImplementation platform('org.junit:junit-bom:5.9.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'
    pitest 'org.pitest:pitest-junit5-plugin:1.1.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // run report after tests
}

jacoco {
    toolVersion = "0.8.10"
}

// Kotlin compilation target
kotlin {
    jvmToolchain(21)
}

// Java compile options
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true     // for CI tools like Codecov
        html.required = true    // for human-readable reports
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    dependsOn test
    violationRules {
        rule {
            limit {
                minimum = 0.80 // 80% minimum coverage
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

pitest {
    pitestVersion = '1.15.0'
    targetClasses = ['fr.guddy.roombookings.*']
    excludedTestClasses = ['fr.guddy.roombookings.architecture.*']
    outputFormats = ['HTML']
    timestampedReports = false
    verbose = true
}